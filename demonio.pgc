#include <stdio.h>
#include <unistd.h>
#include <string.h>
#include <stdlib.h>
#include <math.h>
#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/msg.h>

// Incluye el mecanismo de manejo de errores de SQL
EXEC SQL INCLUDE sqlca;

// Declaracion de variables a usar en SQL
EXEC SQL BEGIN DECLARE SECTION;

   VARCHAR SQL_dbname[14];
   VARCHAR SQL_user[7];
   VARCHAR SQL_password[8];

   VARCHAR SQL_nombre[31];
   VARCHAR SQL_genero[20];
   VARCHAR SQL_pais[20];
   VARCHAR SQL_anio[4];
   VARCHAR SQL_stock[20];
   VARCHAR SQL_precio[5];
   VARCHAR SQL_rut[8];
   VARCHAR SQL_clave[8];
   int SQL_count;

EXEC SQL END DECLARE SECTION;


// Metodo para conectarse a la BdD
int SQLConectar() {

    strcpy(SQL_dbname.arr, "transaccionales");
    SQL_dbname.len = strlen(SQL_dbname.arr);
    strcpy(SQL_user.arr, "17957434");
    SQL_user.len = strlen(SQL_user.arr);
    strcpy(SQL_password.arr, "dalarcon");
    SQL_password.len = strlen(SQL_password.arr);

    EXEC SQL CONNECT TO :SQL_dbname USER :SQL_user IDENTIFIED BY 
    :SQL_password;

    if(sqlca.sqlcode != 0) {
            printf("Error en la conexion con la base de datos\n\n");
            return(0);
    } else {
            printf("Conexion con base de datos realizada\n\n");
            return(1);
    }
}
// Fin SQLConectar()


int main() {

    printf("\n\n ++++++++++   Demonio en ejecucion   ++++++++++\n\n\n");
    printf("Conexion BdD:\n");

    SQLConectar();

    // Se definen variables y estructuras necesarias para la comunicacion 
    // entre el demonio y los .c

    int qid, pid , len;

    struct msgbuf
    {
        long mtype;
        struct
        {
            int pid;
            char datos[2000];
        } texto;
    } mensaje, respuesta;

    qid = msgget (5942016, IPC_CREAT|0666);
    pid = getpid ();

    while(1){

        //limpiamos la estructura de mensaje
        memset(&mensaje, 0, sizeof mensaje);

        //Limpiamos la estructura de respuesta
        memset (&respuesta, 0, sizeof respuesta);

        if((len = msgrcv (qid, &mensaje, 2500, 1, 0)) > 0) {

            memset (&respuesta, 0, sizeof respuesta);
            printf("Recibido: (%ld) <%d/%s>\n\n", mensaje.mtype, 
            mensaje.texto.pid, mensaje.texto.datos);
            int pid_destino = mensaje.texto.pid;
        

     // Fomulario del que viene

            char formulario[7];
            memset (formulario, 0, sizeof formulario);
            sscanf(mensaje.texto.datos, "%6c", formulario);
            printf("El formulario es: [%s]\n\n", formulario);


        
/*************************************************************************
                                Formularios
*************************************************************************/

    //FORMULARIO INGRESAR PELICULA
            if (strcmp(formulario, "ingpel")==0){

                printf("   --------------------   \n   El proceso Es: Ingresar Pelicula \n   --------------------\n\n");
                char nombre[20];
                char genero[20];
                char pais[20];
                char anio[4];
                char stock[20];
                char precio[5];
                
            //Limpiamos los Strings
                memset(nombre, 0 , sizeof nombre);
                memset(genero, 0 , sizeof genero);
                memset(pais, 0, sizeof pais);
                memset(anio, 0 , sizeof anio);
                memset(stock, 0, sizeof stock);
                memset(precio, 0, sizeof precio);

            //Recibimos los datos desde el .c
                sscanf(mensaje.texto.datos, "%20c%20c%20c%4c%20c%5c", nombre,
                genero, pais, anio, stock, precio);

            //Guardamos la variable en la estructura 
                sprintf(SQL_nombre.arr,"%s", nombre);
                SQL_nombre.len=strlen(SQL_nombre.arr);
                sprintf(SQL_genero.arr,"%s", genero);
                SQL_genero.len=strlen(SQL_genero.arr);
                sprintf(SQL_pais.arr,"%s", pais);
                SQL_pais.len=strlen(SQL_pais.arr);
                sprintf(SQL_anio.arr,"%s", anio);
                SQL_anio.len=strlen(SQL_anio.arr);
                sprintf(SQL_stock.arr,"%s", stock);
                SQL_stock.len=strlen(SQL_stock.arr);
                sprintf(SQL_precio.arr,"%s", precio);
                SQL_precio.len=strlen(SQL_precio.arr);
                
                printf("La pelicula es: %s\n", SQL_nombre.arr);
                printf("Genero: %s\n", SQL_genero.arr);
                printf("Pais: %s\n", SQL_pais.arr);
                printf("Anio: %s\n", SQL_anio.arr);
                printf("Stock: %s\n", SQL_stock.arr);
                printf("Precio: %s\n", SQL_precio.arr);
         
             //Verificamos si la  pelicula ya existe
                EXEC SQL SELECT COUNT(*) INTO :SQL_count FROM PELICULA WHERE 
                NOMBRE=:SQL_nombre;

                if( SQL_count != 0)
                {
                    printf("La pelicula ya existe\n");
                    EXEC SQL SELECT nombre INTO :SQL_nombre FROM pelicula WHERE                     genero=:SQL_genero;
                    EXEC SQL SELECT nombre INTO :SQL_nombre FROM pelicula WHERE
                    pais=:SQL_pais;
                    EXEC SQL SELECT nombre INTO :SQL_nombre FROM pelicula WHERE
                    anio=:SQL_anio;
                    EXEC SQL SELECT nombre INTO :SQL_nombre FROM pelicula WHERE
                    stock=:SQL_stock;
                    EXEC SQL SELECT nombre INTO :SQL_nombre FROM pelicula WHERE
                    precio=:SQL_precio;
                    EXEC SQL COMMIT;

                    printf("Y sus datos son: Nombre Pelicula:%s,Genero:%s,Pais:%s,Anio:%s,Stock:%s,Precio:%s\n\n",SQL_nombre.arr,SQL_genero.arr,SQL_pais.arr,SQL_anio.arr,SQL_stock.arr,SQL_precio.arr);

                    memset( &respuesta, 0, sizeof respuesta);
                    sprintf(respuesta.texto.datos, "%s", "02");
                    respuesta.mtype = pid_destino;
                    respuesta.texto.pid = pid;
                    msgsnd(qid, &respuesta, strlen(respuesta.texto.datos)+4,0);
                }
                else{


               // Insertamos la pel√≠cula en la base de datos
                    EXEC SQL INSERT INTO pelicula (nombre, genero, pais, 
anio, stock, precio) VALUES (:SQL_nombre,:SQL_genero,:SQL_pais,:SQL_anio,:SQL_stock,:SQL_precio);
                    EXEC SQL COMMIT;

                // Revisar en caso de error en la consulta
                    if(sqlca.sqlcode != 0) {
                     printf("\nERROR en la consulta SQL\n\n");
                     memset(&respuesta,0,sizeof respuesta);
                        sprintf(respuesta.texto.datos,"%s", "03");
                        respuesta.mtype=pid_destino;
                        respuesta.texto.pid=pid;
                    msgsnd(qid,&respuesta,strlen(respuesta.texto.datos)+4,0);

                    } else {

                   printf("\nPelicula ingresada con exito\n\n");
                   memset(&respuesta,0,sizeof respuesta);
                    sprintf(respuesta.texto.datos, "%s","01");
                    respuesta.mtype=pid_destino;
                    respuesta.texto.pid=pid;
        msgsnd(qid,&respuesta,strlen(respuesta.texto.datos)+4,0);

                } // Fin else

            } //Fin Formulario

    //FORMULARIO LOGIN
   
         if (strcmp(formulario, "loginn")==0){
   printf(" --------------------   \n   El proceso Es: Login\n  -------------------\n\n");
                char rut[8];
                char clave[8];   // cambiar claves
            //Limpiamos los Strings
                memset(nombre, 0 , sizeof rut);
                memset(genero, 0 , sizeof clave);

            //Recibimos los datos desde el .c
                sscanf(mensaje.texto.datos, "%8c%8c",rut,clave); // agregar formulario 

            //Guardamos la variable en la estructura
                sprintf(SQL_rut.arr,"%s", rut);
                SQL_rut.len=strlen(SQL_rut.arr);
                sprintf(SQL_clave.arr,"%s", clave);
                SQL_clave.len=strlen(SQL_clave.arr);

             //Verificamos si el usuario ya existe
                EXEC SQL SELECT COUNT(*) INTO :SQL_count FROM login 
WHERE
                rut=:SQL_rut;

                if( SQL_count != 0)
                {
                    printf("Rut ya existente\n");
                    EXEC SQL SELECT nombre INTO :SQL_nombre FROM login 
WHERE
                    rut=:SQL_rut;

                    printf("Datos: Rut:%s",SQL_rut.arr);
           printf("Clave:  *****");

                    memset( &respuesta, 0, sizeof respuesta);
                    sprintf(respuesta.texto.datos, "%s", "02");
                    respuesta.mtype = pid_destino;
                    respuesta.texto.pid = pid;
                    msgsnd(qid, &respuesta, 
strlen(respuesta.texto.datos)+4,0);
                }
                else{


               // Insertamos el rut en la base de datos
                    EXEC SQL INSERT INTO login (rut, clave) VALUES 
(:SQL_rut,:SQL_clave);
                    EXEC SQL COMMIT;

                // Revisar en caso de error en la consulta
                    if(sqlca.sqlcode != 0) {
                     printf("\nERROR en la consulta SQL\n\n");
                     memset(&respuesta,0,sizeof respuesta);
                        sprintf(respuesta.texto.datos,"%s", "03");
                        respuesta.mtype=pid_destino;
                        respuesta.texto.pid=pid;
                    
msgsnd(qid,&respuesta,strlen(respuesta.texto.datos)+4,0);

                    } else {

                   printf("\nRut con exito\n\n");
                   memset(&respuesta,0,sizeof respuesta);
                    sprintf(respuesta.texto.datos, "%s","01");
                    respuesta.mtype=pid_destino;
                    respuesta.texto.pid=pid;
        msgsnd(qid,&respuesta,strlen(respuesta.texto.datos)+4,0);

                } // Fin else

            } //Fin Formulario
			
			/*************************************************************************
                        Registrar Personas
                         *************************************************************************/

                        if (strcmp(formulario, "regist")==0){

                                printf("   --------------------   \n   El proceso Es: Ingreso de Personal\n   --------------------\n\n");

                                char personal_nombre[20];
                                char personal_apellido[20];
                                char personal_rut[8];
                                char personal_mail[50];
                                char personal_clave[20];
                                
                                int cont=0;
                                int aux=0;
                                int val=0;
                                //Limpiamos los Strings


                                memset (personal_nombre, 0, sizeof personal_nombre);
                                memset (personal_apellido, 0, sizeof personal_apellido);
                                memset (personal_rut, 0, sizeof personal_rut);
                                memset (personal_mail, 0, sizeof mail);
                                memset (personal_clave, 0, sizeof clave);
                                                     

                                //Recibimos los datos desde el .c

                                printf("Recibi: %s\n",mensaje.texto.datos);
                                sscanf(mensaje.texto.datos, "%6c%8c%20c%20c%50c%20c", formulario, rut, nombre, apellido, mail, clave);
                                int conta=0;
                                     for (conta=0;conta<=strlen(personal_mensaje)-1;conta++){
                                          if (personal_mensaje[conta]=='#'){
                                              personal_mensaje[conta]=' ';
                                               }
                                                }
                                
                                

                                for (cont=0;cont<=strlen(personal_mensaje)-1;cont++){
                                    if (personal_mensaje[cont]=='-'){
                                       val=val+1;
                                       cont=cont+1;
                                       aux=0;
                                       }
                                    if (val==0){
                                       personal_nombre[aux]=personal_mensaje[cont];
                                       aux=aux+1;
                                       }
                                     if (val==1){
                                       personal_apellido[aux]=personal_mensaje[cont];
                                       aux=aux+1;
                                       }   
                                    if (val==2){
                                       personal_rut[aux]=personal_mensaje[cont];
                                       aux=aux+1;
                                       }
                                    if (val==3){
                                       personal_direccion[aux]=personal_mensaje[cont];
                                       aux=aux+1;
                                       }
                                    if (val==4){
                                       personal_sueldo_str[aux]=personal_mensaje[cont];
                                       aux=aux+1;
                                       }
                                    if (val==5){
                                       personal_telefono_str[aux]=personal_mensaje[cont];
                                       aux=aux+1;
                                       }  
                                     if (val==6){
                                       personal_cargo[aux]=personal_mensaje[cont];
                                       aux=aux+1;
                                       }       
                                       

                                   }



                                //Guardamos la variable en la estructura arr de los char

                                sprintf(SQL_personal_nombre.arr,"%s", personal_nombre);
                                SQL_personal_nombre.len=strlen(SQL_personal_nombre.arr);
                                limpia(SQL_personal_nombre.arr);

                                sprintf(SQL_personal_apellido.arr,"%s", personal_apellido);
                                SQL_personal_apellido.len=strlen(SQL_personal_apellido.arr);
                                limpia(SQL_personal_apellido.arr);

                                sprintf(SQL_personal_rut.arr,"%s", personal_rut);
                                SQL_personal_rut.len=strlen(SQL_personal_rut.arr);
                                limpia(SQL_personal_rut.arr);
                                
                                sprintf(SQL_personal_direccion.arr,"%s", personal_direccion);
                                SQL_personal_direccion.len=strlen(SQL_personal_direccion.arr);
                                limpia(SQL_personal_direccion.arr);
                                
                                sprintf(SQL_personal_cargo.arr,"%s", personal_cargo);
                                SQL_personal_cargo.len=strlen(SQL_personal_cargo.arr);
                                limpia(SQL_personal_cargo.arr);



                                SQL_personal_sueldo=atoi(personal_sueldo_str);
                                SQL_personal_telefono=atoi(personal_telefono_str);



                                printf("Nombre es: %s\n", SQL_personal_nombre.arr);
                                printf("Apellido es: %s\n", SQL_personal_apellido.arr);
                                printf("Rut es: %s\n", SQL_personal_rut.arr);
                                printf("Direccion es: %s\n", SQL_personal_direccion.arr);
                                printf("Cargo es: %s\n", SQL_personal_cargo.arr);
                                printf("Sueldo es: %d\n", SQL_personal_sueldo);
                                printf("Telefono es: %d\n", SQL_personal_telefono);

                                // Verificamos si el usuario ya esta registrado
                                
                                EXEC SQL SELECT COUNT(*) INTO :SQL_count FROM empleado WHERE id=:SQL_personal_rut;

                                if( SQL_count != 0) {

                                        printf("El personal ya esta registrado\n");


                                        memset( &respuesta, 0, sizeof respuesta);
                                        sprintf(respuesta.texto.datos, "%s", "02");
                                        respuesta.mtype = pid_destino;
                                        respuesta.texto.pid = pid;
                                        msgsnd(qid, &respuesta, strlen(respuesta.texto.datos)+4,0);

                                } else {

                                                      
                                        

                                        // Insertamos el servicio en la BdD
                                        EXEC SQL INSERT INTO empleado (nombre,apellido,id,direccion,sueldo,telefono,cargo)
                                                                                VALUES (:SQL_personal_nombre, :SQL_personal_apellido, :SQL_personal_rut, :SQL_personal_direccion,:SQL_personal_sueldo,:SQL_personal_telefono,:SQL_personal_cargo);
                                        EXEC SQL COMMIT;

                                        // Revisar en caso de error en la consulta
                                        if(sqlca.sqlcode != 0) {

                                                printf("\nERROR en la consulta SQL\n\n");

                                                memset(&respuesta,0,sizeof respuesta);
                                                sprintf(respuesta.texto.datos, "%s", "03");
                                                respuesta.mtype=pid_destino;
                                                respuesta.texto.pid=pid;
                                                msgsnd(qid,&respuesta,strlen(respuesta.texto.datos)+4,0);

                                        } else {

                                                printf("\npersonal ingresado con exito\n\n");

                                                memset(&respuesta,0,sizeof respuesta);
                                                sprintf(respuesta.texto.datos, "%s", "01");
                                                respuesta.mtype=pid_destino;
                                                respuesta.texto.pid=pid;
                                                msgsnd(qid,&respuesta,strlen(respuesta.texto.datos)+4,0);

                                        }

                                } // Fin else

                        }//Fin Formulario ingper


}
}
}
}
}




